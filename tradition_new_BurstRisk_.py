# -*- coding: utf-8 -*-
"""
Created on Mon Sep  6 11:32:49 2021

@author: LZH
"""
import gurobipy as gp
import random
import xlrd
import os
import math
from scipy import integrate
from distance import haversine
# 生产点集合
hospitals = []
for i in range(1, 34):
    l = 'g'+str(i)
    hospitals.append(l)
# 转存点集合
Transfer = ['T1','T2','T5']


# 回收点集合
Recyle = []
for i in range(1, 8):
    l = 'R'+str(i)
    Recyle.append(l)

# 处置点集合
Disposal = []
for i in range(1, 6):
    l = 'D'+str(i)
    Disposal.append(l)
    
# 处置、回收、可利用百分比
alpha = 0.5
beta = 0.3
delta = 0.2
gamma = 0.3

# 极大数MAX
MAX = 1000


GT_nv={('g1', 'T1'): 0.9815098262786017,
  ('g1', 'T2'): 0.6915761237993059,
  ('g1', 'T3'): 0.5593005939155351,
  ('g1', 'T4'): 0.6861318730536903,
  ('g1', 'T5'): 0.6509635692290502,
  ('g2', 'T1'): 0.9692958581827007,
  ('g2', 'T2'): 0.7326128964322435,
  ('g2', 'T3'): 0.8980647371727939,
  ('g2', 'T4'): 0.6239025724911196,
  ('g2', 'T5'): 0.8361885105777795,
  ('g3', 'T1'): 0.7134487595848953,
  ('g3', 'T2'): 0.8756524153522625,
  ('g3', 'T3'): 0.5808607775174939,
  ('g3', 'T4'): 0.935868504023424,
  ('g3', 'T5'): 0.9644375532313372,
  ('g4', 'T1'): 0.7884592053493977,
  ('g4', 'T2'): 0.6594988154750845,
  ('g4', 'T3'): 0.610909089301135,
  ('g4', 'T4'): 0.9406590429566792,
  ('g4', 'T5'): 0.5014260943815912,
  ('g5', 'T1'): 0.6701141174577357,
  ('g5', 'T2'): 0.6874510435804007,
  ('g5', 'T3'): 0.705569118923941,
  ('g5', 'T4'): 0.5858267488392324,
  ('g5', 'T5'): 0.6230532964446593,
  ('g6', 'T1'): 0.69694104727462,
  ('g6', 'T2'): 0.5803824472896087,
  ('g6', 'T3'): 0.7095495874626542,
  ('g6', 'T4'): 0.7779363675604929,
  ('g6', 'T5'): 0.702697128452471,
  ('g7', 'T1'): 0.878649437643685,
  ('g7', 'T2'): 0.9028565621840503,
  ('g7', 'T3'): 0.7351135769094304,
  ('g7', 'T4'): 0.7628151942325765,
  ('g7', 'T5'): 0.6274300979518936,
  ('g8', 'T1'): 0.9577634517422238,
  ('g8', 'T2'): 0.6620187344717738,
  ('g8', 'T3'): 0.6398748821513411,
  ('g8', 'T4'): 0.6084688237410301,
  ('g8', 'T5'): 0.7944044683734499,
  ('g9', 'T1'): 0.6335043383529332,
  ('g9', 'T2'): 0.7395937613894166,
  ('g9', 'T3'): 0.9485183712300399,
  ('g9', 'T4'): 0.7179792290422307,
  ('g9', 'T5'): 0.7625771681446109,
  ('g10', 'T1'): 0.7894482127223468,
  ('g10', 'T2'): 0.7412339647039908,
  ('g10', 'T3'): 0.7645216782889144,
  ('g10', 'T4'): 0.8276141718313543,
  ('g10', 'T5'): 0.8984153449649361,
  ('g11', 'T1'): 0.7911654912271073,
  ('g11', 'T2'): 0.936333138460281,
  ('g11', 'T3'): 0.7026976086994531,
  ('g11', 'T4'): 0.7258102756071487,
  ('g11', 'T5'): 0.6538552235315613,
  ('g12', 'T1'): 0.6040667659336608,
  ('g12', 'T2'): 0.7478740182631813,
  ('g12', 'T3'): 0.7428644093284817,
  ('g12', 'T4'): 0.5145769486521753,
  ('g12', 'T5'): 0.5505268540133459,
  ('g13', 'T1'): 0.5328045750143366,
  ('g13', 'T2'): 0.5570742946704592,
  ('g13', 'T3'): 0.7536176216772612,
  ('g13', 'T4'): 0.8893848395654577,
  ('g13', 'T5'): 0.9238004691626264,
  ('g14', 'T1'): 0.9844558984230702,
  ('g14', 'T2'): 0.6317572983376653,
  ('g14', 'T3'): 0.7789212370136684,
  ('g14', 'T4'): 0.6896061529850656,
  ('g14', 'T5'): 0.6958286130317062,
  ('g15', 'T1'): 0.9428638617532814,
  ('g15', 'T2'): 0.5536833574081699,
  ('g15', 'T3'): 0.6578769615580329,
  ('g15', 'T4'): 0.5770728633086462,
  ('g15', 'T5'): 0.9347193057880945,
  ('g16', 'T1'): 0.7774995723952032,
  ('g16', 'T2'): 0.9589734516742439,
  ('g16', 'T3'): 0.9340224319052979,
  ('g16', 'T4'): 0.6775494784302448,
  ('g16', 'T5'): 0.9908631169625752,
  ('g17', 'T1'): 0.9980029750931563,
  ('g17', 'T2'): 0.743081048931278,
  ('g17', 'T3'): 0.9519317599408803,
  ('g17', 'T4'): 0.5920165136370787,
  ('g17', 'T5'): 0.8951741948512821,
  ('g18', 'T1'): 0.7149485159647261,
  ('g18', 'T2'): 0.963590725256512,
  ('g18', 'T3'): 0.9664118630436392,
  ('g18', 'T4'): 0.5537963602686351,
  ('g18', 'T5'): 0.6708753360241959,
  ('g19', 'T1'): 0.843042081987746,
  ('g19', 'T2'): 0.8281639948709405,
  ('g19', 'T3'): 0.7747685954401164,
  ('g19', 'T4'): 0.6341666518458655,
  ('g19', 'T5'): 0.5786072421589858,
  ('g20', 'T1'): 0.9650138001628163,
  ('g20', 'T2'): 0.5317368137088581,
  ('g20', 'T3'): 0.6054738774974912,
  ('g20', 'T4'): 0.791126752470261,
  ('g20', 'T5'): 0.9764231969585373,
  ('g21', 'T1'): 0.8497806824235481,
  ('g21', 'T2'): 0.688992647554402,
  ('g21', 'T3'): 0.5083731146748892,
  ('g21', 'T4'): 0.6470267931257034,
  ('g21', 'T5'): 0.6044760603751225,
  ('g22', 'T1'): 0.9583928914982772,
  ('g22', 'T2'): 0.7287126505766323,
  ('g22', 'T3'): 0.7396980723874489,
  ('g22', 'T4'): 0.8114713458745892,
  ('g22', 'T5'): 0.5709274932661391,
  ('g23', 'T1'): 0.9400176992778262,
  ('g23', 'T2'): 0.7807734347272741,
  ('g23', 'T3'): 0.8302361567797769,
  ('g23', 'T4'): 0.8303080568284017,
  ('g23', 'T5'): 0.9097613586991738,
  ('g24', 'T1'): 0.8814976855802555,
  ('g24', 'T2'): 0.7646732489516741,
  ('g24', 'T3'): 0.8729598101337918,
  ('g24', 'T4'): 0.5839252952361325,
  ('g24', 'T5'): 0.5988742500434616,
  ('g25', 'T1'): 0.6819276301676586,
  ('g25', 'T2'): 0.7244396978116947,
  ('g25', 'T3'): 0.796812528593138,
  ('g25', 'T4'): 0.7299455262723589,
  ('g25', 'T5'): 0.7038188161947285,
  ('g26', 'T1'): 0.6780510701304164,
  ('g26', 'T2'): 0.8773319991526729,
  ('g26', 'T3'): 0.9637495917403711,
  ('g26', 'T4'): 0.5394291678639112,
  ('g26', 'T5'): 0.8514761321702788,
  ('g27', 'T1'): 0.5786908206556385,
  ('g27', 'T2'): 0.8446465582090263,
  ('g27', 'T3'): 0.704876029997755,
  ('g27', 'T4'): 0.9630359265759774,
  ('g27', 'T5'): 0.632826023759004,
  ('g28', 'T1'): 0.9646263894846723,
  ('g28', 'T2'): 0.6562542171895971,
  ('g28', 'T3'): 0.7958728190746122,
  ('g28', 'T4'): 0.5990614613957586,
  ('g28', 'T5'): 0.5361513517497528,
  ('g29', 'T1'): 0.8159677788835821,
  ('g29', 'T2'): 0.5289124410386815,
  ('g29', 'T3'): 0.8028563233228388,
  ('g29', 'T4'): 0.9621323368523047,
  ('g29', 'T5'): 0.8342815745974785,
  ('g30', 'T1'): 0.7945844670761113,
  ('g30', 'T2'): 0.6340320106203257,
  ('g30', 'T3'): 0.8026454004061914,
  ('g30', 'T4'): 0.6009354079062488,
  ('g30', 'T5'): 0.5785836070600019,
  ('g31', 'T1'): 0.9848080078656007,
  ('g31', 'T2'): 0.6215787818497875,
  ('g31', 'T3'): 0.634500722137954,
  ('g31', 'T4'): 0.5133640545750267,
  ('g31', 'T5'): 0.607303032413389,
  ('g32', 'T1'): 0.8451200528884044,
  ('g32', 'T2'): 0.6469911959028516,
  ('g32', 'T3'): 0.8520966924915333,
  ('g32', 'T4'): 0.7373068423184879,
  ('g32', 'T5'): 0.8411616788792518,
  ('g33', 'T1'): 0.7603223799143828,
  ('g33', 'T2'): 0.57903093088476,
  ('g33', 'T3'): 0.7820935851712004,
  ('g33', 'T4'): 0.8197058150747609,
  ('g33', 'T5'): 0.6595664780903028}
GR_nv={('g1', 'R1'): 0.5599906269429562,
  ('g1', 'R2'): 0.78003003606548,
  ('g1', 'R3'): 0.5933753721067969,
  ('g1', 'R4'): 0.7740540699165827,
  ('g1', 'R5'): 0.5352068558246246,
  ('g1', 'R6'): 0.5053552084582774,
  ('g1', 'R7'): 0.5134674342036734,
  ('g2', 'R1'): 0.7444626383324278,
  ('g2', 'R2'): 0.9885313683091974,
  ('g2', 'R3'): 0.8503728421934507,
  ('g2', 'R4'): 0.5657741462530557,
  ('g2', 'R5'): 0.8919501102701248,
  ('g2', 'R6'): 0.5969256428502823,
  ('g2', 'R7'): 0.9187487186996808,
  ('g3', 'R1'): 0.7495983563182547,
  ('g3', 'R2'): 0.8321716163863377,
  ('g3', 'R3'): 0.7688645296309018,
  ('g3', 'R4'): 0.6623871281294821,
  ('g3', 'R5'): 0.5834394540197425,
  ('g3', 'R6'): 0.5927866606455225,
  ('g3', 'R7'): 0.9531280658734362,
  ('g4', 'R1'): 0.9050076567942829,
  ('g4', 'R2'): 0.758956826070474,
  ('g4', 'R3'): 0.7249508496161977,
  ('g4', 'R4'): 0.6935615523390436,
  ('g4', 'R5'): 0.530311006631188,
  ('g4', 'R6'): 0.8722860841120958,
  ('g4', 'R7'): 0.5563757781066709,
  ('g5', 'R1'): 0.5017717855614535,
  ('g5', 'R2'): 0.8065253981508859,
  ('g5', 'R3'): 0.5384827170128066,
  ('g5', 'R4'): 0.8634943449244085,
  ('g5', 'R5'): 0.949107302474087,
  ('g5', 'R6'): 0.9114478293754293,
  ('g5', 'R7'): 0.8983655576080227,
  ('g6', 'R1'): 0.811335717471726,
  ('g6', 'R2'): 0.5442206961935818,
  ('g6', 'R3'): 0.7783638738119418,
  ('g6', 'R4'): 0.5010871185682924,
  ('g6', 'R5'): 0.5576696292338998,
  ('g6', 'R6'): 0.9558212585862369,
  ('g6', 'R7'): 0.7818346596819845,
  ('g7', 'R1'): 0.8335532920967605,
  ('g7', 'R2'): 0.6525891003288096,
  ('g7', 'R3'): 0.7358404607996594,
  ('g7', 'R4'): 0.7460199439199791,
  ('g7', 'R5'): 0.5104792477130025,
  ('g7', 'R6'): 0.7783669526292814,
  ('g7', 'R7'): 0.9058653728859398,
  ('g8', 'R1'): 0.8752297017653258,
  ('g8', 'R2'): 0.5483149473632349,
  ('g8', 'R3'): 0.8076382039796477,
  ('g8', 'R4'): 0.702298204095372,
  ('g8', 'R5'): 0.9418235408191549,
  ('g8', 'R6'): 0.7519125738520036,
  ('g8', 'R7'): 0.9808744551788459,
  ('g9', 'R1'): 0.8546307940020332,
  ('g9', 'R2'): 0.675927660367639,
  ('g9', 'R3'): 0.8004509873561076,
  ('g9', 'R4'): 0.8407793538201729,
  ('g9', 'R5'): 0.9441226508193132,
  ('g9', 'R6'): 0.7740893891267782,
  ('g9', 'R7'): 0.7579532428299898,
  ('g10', 'R1'): 0.763370933456935,
  ('g10', 'R2'): 0.9235411169160438,
  ('g10', 'R3'): 0.6634642170168772,
  ('g10', 'R4'): 0.8261082568213529,
  ('g10', 'R5'): 0.9472727545631375,
  ('g10', 'R6'): 0.5725793091330422,
  ('g10', 'R7'): 0.7401792671125473,
  ('g11', 'R1'): 0.7056748021709361,
  ('g11', 'R2'): 0.6103513044323006,
  ('g11', 'R3'): 0.6570622006945745,
  ('g11', 'R4'): 0.5994372760247266,
  ('g11', 'R5'): 0.7978310949477049,
  ('g11', 'R6'): 0.7384424750973457,
  ('g11', 'R7'): 0.961889214768465,
  ('g12', 'R1'): 0.6541970484951936,
  ('g12', 'R2'): 0.773144213042041,
  ('g12', 'R3'): 0.6103167519868562,
  ('g12', 'R4'): 0.7426441208417413,
  ('g12', 'R5'): 0.8130031897054988,
  ('g12', 'R6'): 0.6202288555041904,
  ('g12', 'R7'): 0.7608649275661512,
  ('g13', 'R1'): 0.5676500552169599,
  ('g13', 'R2'): 0.7566524091769289,
  ('g13', 'R3'): 0.6759875347848534,
  ('g13', 'R4'): 0.766197112951379,
  ('g13', 'R5'): 0.726261177015741,
  ('g13', 'R6'): 0.9837649144201781,
  ('g13', 'R7'): 0.5828668865230854,
  ('g14', 'R1'): 0.5991341685112921,
  ('g14', 'R2'): 0.7027476066553915,
  ('g14', 'R3'): 0.9525437595098825,
  ('g14', 'R4'): 0.8279231501005515,
  ('g14', 'R5'): 0.8372632637629476,
  ('g14', 'R6'): 0.621502310587566,
  ('g14', 'R7'): 0.5039358149111347,
  ('g15', 'R1'): 0.6983678786983198,
  ('g15', 'R2'): 0.9980815559127583,
  ('g15', 'R3'): 0.7786323677458646,
  ('g15', 'R4'): 0.6201504795111756,
  ('g15', 'R5'): 0.8332786484593133,
  ('g15', 'R6'): 0.5666563231878035,
  ('g15', 'R7'): 0.8760663601193228,
  ('g16', 'R1'): 0.9993582496838072,
  ('g16', 'R2'): 0.849336160190822,
  ('g16', 'R3'): 0.9790083475757161,
  ('g16', 'R4'): 0.8303676636317829,
  ('g16', 'R5'): 0.6625556654394149,
  ('g16', 'R6'): 0.6276520838309216,
  ('g16', 'R7'): 0.9931408729171467,
  ('g17', 'R1'): 0.7704069707855365,
  ('g17', 'R2'): 0.7933375085816292,
  ('g17', 'R3'): 0.9583594635381598,
  ('g17', 'R4'): 0.5642104684781883,
  ('g17', 'R5'): 0.5578441918662864,
  ('g17', 'R6'): 0.8515124663529876,
  ('g17', 'R7'): 0.6511472509462077,
  ('g18', 'R1'): 0.9197178401579974,
  ('g18', 'R2'): 0.8320476089326494,
  ('g18', 'R3'): 0.7392115295583989,
  ('g18', 'R4'): 0.5733054686297545,
  ('g18', 'R5'): 0.743846279711594,
  ('g18', 'R6'): 0.6501180241017949,
  ('g18', 'R7'): 0.8451308802948228,
  ('g19', 'R1'): 0.8703650477314789,
  ('g19', 'R2'): 0.8362692851769915,
  ('g19', 'R3'): 0.5947671654142781,
  ('g19', 'R4'): 0.5184247461833748,
  ('g19', 'R5'): 0.7257749872384567,
  ('g19', 'R6'): 0.5411812223938557,
  ('g19', 'R7'): 0.6942957577106211,
  ('g20', 'R1'): 0.6637932571870697,
  ('g20', 'R2'): 0.6166009505544674,
  ('g20', 'R3'): 0.9108418349626042,
  ('g20', 'R4'): 0.7857090927714028,
  ('g20', 'R5'): 0.7693788851148188,
  ('g20', 'R6'): 0.6961498387755637,
  ('g20', 'R7'): 0.5041158867936438,
  ('g21', 'R1'): 0.5920753547940467,
  ('g21', 'R2'): 0.6195836986679495,
  ('g21', 'R3'): 0.7202795534711317,
  ('g21', 'R4'): 0.9189404576844948,
  ('g21', 'R5'): 0.8791928225380243,
  ('g21', 'R6'): 0.6259606496644439,
  ('g21', 'R7'): 0.708077184316497,
  ('g22', 'R1'): 0.5296781995508217,
  ('g22', 'R2'): 0.5658544899266204,
  ('g22', 'R3'): 0.975920350163806,
  ('g22', 'R4'): 0.8333779844910096,
  ('g22', 'R5'): 0.8070490746352894,
  ('g22', 'R6'): 0.9445591342375492,
  ('g22', 'R7'): 0.5713709546325756,
  ('g23', 'R1'): 0.6648230567194497,
  ('g23', 'R2'): 0.8187741958363656,
  ('g23', 'R3'): 0.8970274550905839,
  ('g23', 'R4'): 0.6769072037511459,
  ('g23', 'R5'): 0.7890037675371833,
  ('g23', 'R6'): 0.7702808653045783,
  ('g23', 'R7'): 0.8780133364032909,
  ('g24', 'R1'): 0.9197896759360402,
  ('g24', 'R2'): 0.6370059421385605,
  ('g24', 'R3'): 0.8771999031897383,
  ('g24', 'R4'): 0.6623362327684043,
  ('g24', 'R5'): 0.6507020686590614,
  ('g24', 'R6'): 0.9797708478759934,
  ('g24', 'R7'): 0.6037189879653879,
  ('g25', 'R1'): 0.9775575048711054,
  ('g25', 'R2'): 0.5321003122467749,
  ('g25', 'R3'): 0.5735663640672639,
  ('g25', 'R4'): 0.5757357248877084,
  ('g25', 'R5'): 0.9965441067550256,
  ('g25', 'R6'): 0.5490493167370873,
  ('g25', 'R7'): 0.9404037344912799,
  ('g26', 'R1'): 0.9402523027559793,
  ('g26', 'R2'): 0.9168001626912656,
  ('g26', 'R3'): 0.5486583196475292,
  ('g26', 'R4'): 0.9773189518931595,
  ('g26', 'R5'): 0.7078955489682193,
  ('g26', 'R6'): 0.6741133503541996,
  ('g26', 'R7'): 0.8259031021286716,
  ('g27', 'R1'): 0.8166110469288069,
  ('g27', 'R2'): 0.904008818726346,
  ('g27', 'R3'): 0.5669229834341382,
  ('g27', 'R4'): 0.5278339740023531,
  ('g27', 'R5'): 0.5166706197509505,
  ('g27', 'R6'): 0.743372043218325,
  ('g27', 'R7'): 0.8142240290740224,
  ('g28', 'R1'): 0.7643017977448927,
  ('g28', 'R2'): 0.6105281061717636,
  ('g28', 'R3'): 0.9503214057251452,
  ('g28', 'R4'): 0.8165581619313103,
  ('g28', 'R5'): 0.5188199203805548,
  ('g28', 'R6'): 0.7432368795226914,
  ('g28', 'R7'): 0.7890447609059862,
  ('g29', 'R1'): 0.8968147050488425,
  ('g29', 'R2'): 0.5054215238428006,
  ('g29', 'R3'): 0.661306676993549,
  ('g29', 'R4'): 0.7336935469193085,
  ('g29', 'R5'): 0.6630649189778703,
  ('g29', 'R6'): 0.9916473188987261,
  ('g29', 'R7'): 0.5159967950363176,
  ('g30', 'R1'): 0.9804628183912423,
  ('g30', 'R2'): 0.5290177890953376,
  ('g30', 'R3'): 0.863343927972632,
  ('g30', 'R4'): 0.8642597345764234,
  ('g30', 'R5'): 0.9175378099082976,
  ('g30', 'R6'): 0.7813210937858197,
  ('g30', 'R7'): 0.7780126518554111,
  ('g31', 'R1'): 0.5997810152908876,
  ('g31', 'R2'): 0.6140103144077163,
  ('g31', 'R3'): 0.8795673500560028,
  ('g31', 'R4'): 0.5386883624692264,
  ('g31', 'R5'): 0.7319985696869038,
  ('g31', 'R6'): 0.7672951300381536,
  ('g31', 'R7'): 0.7697447310581078,
  ('g32', 'R1'): 0.5887867521592444,
  ('g32', 'R2'): 0.78143207714147,
  ('g32', 'R3'): 0.6548856960589842,
  ('g32', 'R4'): 0.751720103588317,
  ('g32', 'R5'): 0.7820268688648402,
  ('g32', 'R6'): 0.7987054967567008,
  ('g32', 'R7'): 0.817477716484228,
  ('g33', 'R1'): 0.6731139877183165,
  ('g33', 'R2'): 0.7469067193814299,
  ('g33', 'R3'): 0.7230913930953415,
  ('g33', 'R4'): 0.8470379196499924,
  ('g33', 'R5'): 0.9186849064263305,
  ('g33', 'R6'): 0.814861063367894,
  ('g33', 'R7'): 0.861932086698012}
GD_nv={('g1', 'D1'): 0.7678530483158819,
  ('g1', 'D2'): 0.7848113707399627,
  ('g1', 'D3'): 0.9590049131617226,
  ('g1', 'D4'): 0.8647027009514348,
  ('g1', 'D5'): 0.762588412861906,
  ('g2', 'D1'): 0.7273780473725963,
  ('g2', 'D2'): 0.6517642637897879,
  ('g2', 'D3'): 0.6959664635856838,
  ('g2', 'D4'): 0.8173312501869485,
  ('g2', 'D5'): 0.6544898604209524,
  ('g3', 'D1'): 0.930174714206451,
  ('g3', 'D2'): 0.7683808783504447,
  ('g3', 'D3'): 0.8867447211903775,
  ('g3', 'D4'): 0.7686227314276662,
  ('g3', 'D5'): 0.7656465016986427,
  ('g4', 'D1'): 0.5805584639596042,
  ('g4', 'D2'): 0.7211149883023054,
  ('g4', 'D3'): 0.8813599641313999,
  ('g4', 'D4'): 0.9440312370408646,
  ('g4', 'D5'): 0.848589335263376,
  ('g5', 'D1'): 0.6267915617725983,
  ('g5', 'D2'): 0.5834507407265347,
  ('g5', 'D3'): 0.7962014307960047,
  ('g5', 'D4'): 0.8154338985247672,
  ('g5', 'D5'): 0.5144949112211031,
  ('g6', 'D1'): 0.5404797805215346,
  ('g6', 'D2'): 0.6495895777699353,
  ('g6', 'D3'): 0.5487046494475718,
  ('g6', 'D4'): 0.8887798680534353,
  ('g6', 'D5'): 0.6367075407900804,
  ('g7', 'D1'): 0.7060227615636294,
  ('g7', 'D2'): 0.8973340923652748,
  ('g7', 'D3'): 0.6202531989093052,
  ('g7', 'D4'): 0.7046432277613683,
  ('g7', 'D5'): 0.92734848077872,
  ('g8', 'D1'): 0.8268775262787259,
  ('g8', 'D2'): 0.5125216649561553,
  ('g8', 'D3'): 0.5605491395472026,
  ('g8', 'D4'): 0.798451835149742,
  ('g8', 'D5'): 0.582050789910112,
  ('g9', 'D1'): 0.8813636505986824,
  ('g9', 'D2'): 0.9326869257912186,
  ('g9', 'D3'): 0.8509478886134008,
  ('g9', 'D4'): 0.7663607715539533,
  ('g9', 'D5'): 0.8473055039960653,
  ('g10', 'D1'): 0.7333416912369966,
  ('g10', 'D2'): 0.8952908511296875,
  ('g10', 'D3'): 0.5930073519858274,
  ('g10', 'D4'): 0.8305181858199249,
  ('g10', 'D5'): 0.7261808760964906,
  ('g11', 'D1'): 0.623844167657013,
  ('g11', 'D2'): 0.5009910080547415,
  ('g11', 'D3'): 0.6067346985187037,
  ('g11', 'D4'): 0.8706134389245458,
  ('g11', 'D5'): 0.8749720222416999,
  ('g12', 'D1'): 0.8808131933668569,
  ('g12', 'D2'): 0.6952507172753267,
  ('g12', 'D3'): 0.5498128966539104,
  ('g12', 'D4'): 0.533994218127536,
  ('g12', 'D5'): 0.8285687908859847,
  ('g13', 'D1'): 0.635950982440155,
  ('g13', 'D2'): 0.9744644864644876,
  ('g13', 'D3'): 0.6798223364690819,
  ('g13', 'D4'): 0.9347777172020966,
  ('g13', 'D5'): 0.8715896355244014,
  ('g14', 'D1'): 0.9747595442083732,
  ('g14', 'D2'): 0.921118213491631,
  ('g14', 'D3'): 0.7353556504625209,
  ('g14', 'D4'): 0.7625958935928474,
  ('g14', 'D5'): 0.8742388074357375,
  ('g15', 'D1'): 0.9232786096405514,
  ('g15', 'D2'): 0.6121936219105584,
  ('g15', 'D3'): 0.5636293597318344,
  ('g15', 'D4'): 0.7314847007627574,
  ('g15', 'D5'): 0.875925691576994,
  ('g16', 'D1'): 0.9586475078951622,
  ('g16', 'D2'): 0.751901393977253,
  ('g16', 'D3'): 0.6815742114550319,
  ('g16', 'D4'): 0.8475299075620923,
  ('g16', 'D5'): 0.8175815119447467,
  ('g17', 'D1'): 0.5814114529589269,
  ('g17', 'D2'): 0.7864176856247642,
  ('g17', 'D3'): 0.5762201221860624,
  ('g17', 'D4'): 0.8948754957508052,
  ('g17', 'D5'): 0.8200368784050629,
  ('g18', 'D1'): 0.7410155287835297,
  ('g18', 'D2'): 0.9889693711967067,
  ('g18', 'D3'): 0.5314152911183992,
  ('g18', 'D4'): 0.9236311526537285,
  ('g18', 'D5'): 0.825289761625011,
  ('g19', 'D1'): 0.8986612251974824,
  ('g19', 'D2'): 0.8053203309859311,
  ('g19', 'D3'): 0.6396682987093782,
  ('g19', 'D4'): 0.7693969090148364,
  ('g19', 'D5'): 0.9585605910661981,
  ('g20', 'D1'): 0.8372041032564901,
  ('g20', 'D2'): 0.6239190943563333,
  ('g20', 'D3'): 0.5670831105761847,
  ('g20', 'D4'): 0.5067005395009103,
  ('g20', 'D5'): 0.9832998113901307,
  ('g21', 'D1'): 0.8901212360975048,
  ('g21', 'D2'): 0.5363754751182552,
  ('g21', 'D3'): 0.555590152409554,
  ('g21', 'D4'): 0.613751350357793,
  ('g21', 'D5'): 0.6241366990614307,
  ('g22', 'D1'): 0.744660085305467,
  ('g22', 'D2'): 0.6080244773092889,
  ('g22', 'D3'): 0.5053578412271735,
  ('g22', 'D4'): 0.6044301157749342,
  ('g22', 'D5'): 0.8395931704590275,
  ('g23', 'D1'): 0.5609445405426319,
  ('g23', 'D2'): 0.5556496640440738,
  ('g23', 'D3'): 0.6952729489150384,
  ('g23', 'D4'): 0.9098333900050501,
  ('g23', 'D5'): 0.7985107918720653,
  ('g24', 'D1'): 0.6899371974880125,
  ('g24', 'D2'): 0.55846412836859,
  ('g24', 'D3'): 0.9760550232616657,
  ('g24', 'D4'): 0.7499140831281786,
  ('g24', 'D5'): 0.9795884143456766,
  ('g25', 'D1'): 0.9128222168974816,
  ('g25', 'D2'): 0.8496282565398456,
  ('g25', 'D3'): 0.5808675899581643,
  ('g25', 'D4'): 0.7940403784660696,
  ('g25', 'D5'): 0.5182112186545181,
  ('g26', 'D1'): 0.5263150874256677,
  ('g26', 'D2'): 0.6203403727561254,
  ('g26', 'D3'): 0.7989659703323642,
  ('g26', 'D4'): 0.792447118783997,
  ('g26', 'D5'): 0.9662581955239744,
  ('g27', 'D1'): 0.9211839328968863,
  ('g27', 'D2'): 0.9661821080939923,
  ('g27', 'D3'): 0.9438264366421745,
  ('g27', 'D4'): 0.6744566928614524,
  ('g27', 'D5'): 0.6035438127055517,
  ('g28', 'D1'): 0.6415047150892539,
  ('g28', 'D2'): 0.977551294689522,
  ('g28', 'D3'): 0.7760373937152474,
  ('g28', 'D4'): 0.6623669518504889,
  ('g28', 'D5'): 0.6546568291600301,
  ('g29', 'D1'): 0.5350677045812935,
  ('g29', 'D2'): 0.5551987473121627,
  ('g29', 'D3'): 0.9504569550089719,
  ('g29', 'D4'): 0.955317776665755,
  ('g29', 'D5'): 0.781747510400564,
  ('g30', 'D1'): 0.9039047133653546,
  ('g30', 'D2'): 0.8209430809790763,
  ('g30', 'D3'): 0.9788306177102386,
  ('g30', 'D4'): 0.6732573799094479,
  ('g30', 'D5'): 0.9617204180164818,
  ('g31', 'D1'): 0.6192880706502624,
  ('g31', 'D2'): 0.7304171319414139,
  ('g31', 'D3'): 0.9814777125222127,
  ('g31', 'D4'): 0.964600067309957,
  ('g31', 'D5'): 0.970010894444613,
  ('g32', 'D1'): 0.6558425237599033,
  ('g32', 'D2'): 0.623939257826379,
  ('g32', 'D3'): 0.708828769223217,
  ('g32', 'D4'): 0.9248794854064709,
  ('g32', 'D5'): 0.8435664275711682,
  ('g33', 'D1'): 0.968914638565507,
  ('g33', 'D2'): 0.5237708184492642,
  ('g33', 'D3'): 0.6744816542387883,
  ('g33', 'D4'): 0.9148422374043541,
  ('g33', 'D5'): 0.914406904501624}
TR_nv={('T1', 'R1'): 0.9800420201604145,
  ('T1', 'R2'): 0.8866740706738918,
  ('T1', 'R3'): 0.8163475537663654,
  ('T1', 'R4'): 0.5426574530335961,
  ('T1', 'R5'): 0.9797812763337419,
  ('T1', 'R6'): 0.9856711629867878,
  ('T1', 'R7'): 0.8722523606692549,
  ('T2', 'R1'): 0.5974166461767185,
  ('T2', 'R2'): 0.5625762192673343,
  ('T2', 'R3'): 0.7944410514068599,
  ('T2', 'R4'): 0.7632499724551618,
  ('T2', 'R5'): 0.7862603071047174,
  ('T2', 'R6'): 0.688772224022548,
  ('T2', 'R7'): 0.6235239380951895,
  ('T3', 'R1'): 0.6566163084384983,
  ('T3', 'R2'): 0.6952727391020295,
  ('T3', 'R3'): 0.7624018957124465,
  ('T3', 'R4'): 0.9116442879548585,
  ('T3', 'R5'): 0.5528340407678931,
  ('T3', 'R6'): 0.5511711672953582,
  ('T3', 'R7'): 0.957350924575151,
  ('T4', 'R1'): 0.9050603244329574,
  ('T4', 'R2'): 0.5584195086118048,
  ('T4', 'R3'): 0.592118527949788,
  ('T4', 'R4'): 0.7496506272150656,
  ('T4', 'R5'): 0.6903330181374887,
  ('T4', 'R6'): 0.9302133579336624,
  ('T4', 'R7'): 0.5821354964600889,
  ('T5', 'R1'): 0.8993416973757324,
  ('T5', 'R2'): 0.921181318601157,
  ('T5', 'R3'): 0.8404518527104332,
  ('T5', 'R4'): 0.7921944580859268,
  ('T5', 'R5'): 0.9181627380069186,
  ('T5', 'R6'): 0.7887097324139953,
  ('T5', 'R7'): 0.5468174624681048}
TD_nv={('T1', 'D1'): 0.9451870957059085,
  ('T1', 'D2'): 0.875771283741261,
  ('T1', 'D3'): 0.7071963357133562,
  ('T1', 'D4'): 0.9764813639841292,
  ('T1', 'D5'): 0.7052877499911048,
  ('T2', 'D1'): 0.6392558649939559,
  ('T2', 'D2'): 0.504176127906753,
  ('T2', 'D3'): 0.9382108685738688,
  ('T2', 'D4'): 0.840773342441332,
  ('T2', 'D5'): 0.7598568853029766,
  ('T3', 'D1'): 0.8601131486696729,
  ('T3', 'D2'): 0.5022568228365673,
  ('T3', 'D3'): 0.8374619380808261,
  ('T3', 'D4'): 0.6129668043813691,
  ('T3', 'D5'): 0.9391941250542377,
  ('T4', 'D1'): 0.5033413531244,
  ('T4', 'D2'): 0.7164620331713738,
  ('T4', 'D3'): 0.8100816850112839,
  ('T4', 'D4'): 0.9394079154194915,
  ('T4', 'D5'): 0.9528746539928938,
  ('T5', 'D1'): 0.965435087425605,
  ('T5', 'D2'): 0.7070651039641247,
  ('T5', 'D3'): 0.830352288521413,
  ('T5', 'D4'): 0.5216185400638842,
  ('T5', 'D5'): 0.816661818347687}
RD_nv={('R1', 'D1'): 0.7579304568059233,
  ('R1', 'D2'): 0.7811655123193395,
  ('R1', 'D3'): 0.8455797698996179,
  ('R1', 'D4'): 0.6732931175726173,
  ('R1', 'D5'): 0.9542011386653102,
  ('R2', 'D1'): 0.8675604717769763,
  ('R2', 'D2'): 0.747921667103274,
  ('R2', 'D3'): 0.5443460108679832,
  ('R2', 'D4'): 0.9609561714255572,
  ('R2', 'D5'): 0.9307711343033783,
  ('R3', 'D1'): 0.8102853610982927,
  ('R3', 'D2'): 0.7958705645708612,
  ('R3', 'D3'): 0.8815352009072561,
  ('R3', 'D4'): 0.9213394419779407,
  ('R3', 'D5'): 0.8742850292567015,
  ('R4', 'D1'): 0.6923357890994305,
  ('R4', 'D2'): 0.5832082205822824,
  ('R4', 'D3'): 0.7212373310904361,
  ('R4', 'D4'): 0.7506555429042345,
  ('R4', 'D5'): 0.5616121317425742,
  ('R5', 'D1'): 0.8417081793678036,
  ('R5', 'D2'): 0.7875321459606317,
  ('R5', 'D3'): 0.7574268282271047,
  ('R5', 'D4'): 0.6964069460194748,
  ('R5', 'D5'): 0.6044222936195323,
  ('R6', 'D1'): 0.6984365271636706,
  ('R6', 'D2'): 0.7788751529128918,
  ('R6', 'D3'): 0.8952211108447963,
  ('R6', 'D4'): 0.925564346663829,
  ('R6', 'D5'): 0.9834436126770958,
  ('R7', 'D1'): 0.5437430355820789,
  ('R7', 'D2'): 0.9959723444685701,
  ('R7', 'D3'): 0.7800154845917162,
  ('R7', 'D4'): 0.7560299553369005,
  ('R7', 'D5'): 0.5242816541324086}


book = xlrd.open_workbook(os.path.join('验证数据.xlsx'))

# 传入各节点的经纬度坐标
x_pos = {}
y_pos = {}
sh_g = book.sheet_by_name('jwd_production')
i = 1
for g in hospitals:
    x_pos[g] = sh_g.cell_value(i, 1)
    y_pos[g] = sh_g.cell_value(i, 2)
    i += 1

sh_t = book.sheet_by_name('jwd_transfer')
i = 1
for g in Transfer:
    x_pos[g] = sh_t.cell_value(i, 1)
    y_pos[g] = sh_t.cell_value(i, 2)
    i += 1

sh_r = book.sheet_by_name('jwd_recycle')
i = 1
for g in Recyle:
    x_pos[g] = sh_r.cell_value(i, 1)
    y_pos[g] = sh_r.cell_value(i, 2)
    i += 1

sh_d = book.sheet_by_name('jwd_disposal')
i = 1
for g in Disposal:
    x_pos[g] = sh_d.cell_value(i, 1)
    y_pos[g] = sh_d.cell_value(i, 2)
    i += 1

# 生产点与存放点的距离矩阵，这里把各生产点到T3的距离设置很远,道路长度大于453时，计算道路外风险减去宽度才不小于0
GTmatrix = {(g, t): haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t])
            if haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t]) >= 500 else 500
            for g in hospitals for t in Transfer}

# 生产点与回收点的距离矩阵
GRmatrix = {(g, t): haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t])
            if haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t]) >= 500 else 500
            for g in hospitals for t in Recyle}

# 生产点与处置点的距离矩阵
GDmatrix = {(g, t): haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t])
            if haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t]) >= 500 else 500
            for g in hospitals for t in Disposal}

# 存放点与回收点的距离矩阵
TRmatrix = {(g, t): haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t])
            if haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t]) >= 500 else 500
            for g in Transfer for t in Recyle}

# 存放点与处置点的距离矩阵
TDmatrix = {(g, t): haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t])
            if haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t]) >= 500 else 500
            for g in Transfer for t in Disposal}

# 回收点与处置点的距离矩阵
RDmatrix = {(g, t): haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t])
            if haversine(x_pos[g], y_pos[g], x_pos[t], y_pos[t]) >= 500 else 500
            for g in Recyle for t in Disposal}


# 传入各节点区域人口密度
eta_node = {}
g_md = book.sheet_by_name('g_md')
i = 1
for g in hospitals:
    eta_node[g] = g_md.cell_value(i, 1)
    i += 1

t_md = book.sheet_by_name('t_md')
i = 1
for g in Transfer:
    eta_node[g] = t_md.cell_value(i, 1)
    i += 1

r_md = book.sheet_by_name('r_md')
i = 1
for g in Recyle:
    eta_node[g] = r_md.cell_value(i, 1)
    i += 1

d_md = book.sheet_by_name('d_md')
i = 1
for g in Disposal:
    eta_node[g] = d_md.cell_value(i, 1)
    i += 1



# 风险所需参数
e = 1e3
IR_man = 3.02e-2  # 人体平均吸入率
w_v = 10  # 车辆行驶速度
w_man = 2  # 人行走速度
mu_h = 0.06  # 气溶胶水平扩散速度
mu_v = 0.038  # 气溶胶垂直扩散速度
a0 = 1.25  # 车辆宽度半径
h0 = 3.4  # 车高
l0 = 8.75  # 车长
r0 = 10  # 场地宽度半径
h_node = 7  # 场地高度
T = 60  # 应急时间
# n_v=0.5#车流量(辆/s)
lamd = 4  # 乘车比例系数
d_length = 10  # 车道宽度
eta = 0.05  # 道路区域人口密度
# eta_node=0.01#节点区域人口密度
p_burst = 0.2  # 爆发期概率值
p_smooth = 0.6  # 平稳期概率值
p_decline = 0.2  # 衰退期概率值
scenario, p, zeta = gp.multidict({
    'burst': [0.2, 2],
    'smooth': [0.6, 1],
    'decline': [0.2, 0.5],
})
tau = 0.5  # 控制偏差的权重系数
w_pun = 0.1  # 惩罚函数系数

# 积分表达式


def func(t):
    return 1/((a0+mu_h*t)*(h0+mu_v*t)*(l0+w_v*t))

# integrate.quad(func,0,250)[0]


# 生产点与回收点的路内风险系数矩阵
GRQmatrix = {}
for g in hospitals:
    for r in Recyle:
        GRQmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, GRmatrix[g, r]/w_v)[0])

# 生产点与处置点的路内风险系数矩阵
GDQmatrix = {}
for g in hospitals:
    for r in Disposal:
        GDQmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, GDmatrix[g, r]/w_v)[0])

# 生产点与存放点的路内风险系数矩阵
GTQmatrix = {}
for g in hospitals:
    for r in Transfer:
        GTQmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, GTmatrix[g, r]/w_v)[0])

# 存放点与回收点的路内风险系数矩阵
TRQmatrix = {}
for g in Transfer:
    for r in Recyle:
        TRQmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, TRmatrix[g, r]/w_v)[0])

# 存放点与处置点的路内风险系数矩阵
TDQmatrix = {}
for g in Transfer:
    for r in Disposal:
        TDQmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, TDmatrix[g, r]/w_v)[0])

# 回收点与处置点的路内风险系数矩阵
RDQmatrix = {}
for g in Recyle:
    for r in Disposal:
        RDQmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, RDmatrix[g, r]/w_v)[0])


# 路外风险系数
# 生产点与回收点的路外风险系数矩阵
GRQ_outmatrix = {}
for g in hospitals:
    for r in Recyle:
        GRQ_outmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, GRmatrix[g, r]/w_man)[0])

# 生产点与处置点的路外风险系数矩阵
GDQ_outmatrix = {}
for g in hospitals:
    for r in Disposal:
        GDQ_outmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, GDmatrix[g, r]/w_man)[0])

# 生产点与存放点的路外风险系数矩阵
GTQ_outmatrix = {}
for g in hospitals:
    for r in Transfer:
        GTQ_outmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, GTmatrix[g, r]/w_man)[0])

# 存放点与回收点的路外风险系数矩阵
TRQ_outmatrix = {}
for g in Transfer:
    for r in Recyle:
        TRQ_outmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, TRmatrix[g, r]/w_man)[0])

# 存放点与处置点的路外风险系数矩阵
TDQ_outmatrix = {}
for g in Transfer:
    for r in Disposal:
        TDQ_outmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, TDmatrix[g, r]/w_man)[0])

# 回收点与处置点的路外风险系数矩阵
RDQ_outmatrix = {}
for g in Recyle:
    for r in Disposal:
        RDQ_outmatrix[g, r] = e*(2*IR_man/math.pi) * \
            (integrate.quad(func, 0, RDmatrix[g, r]/w_man)[0])

# 节点风险系数


def func1(t):
    return e*(3*IR_man/(2*math.pi))/((r0+mu_h*t)*(r0+mu_h*t)*(h_node+mu_v*t))


nodeQ = integrate.quad(func1, 0, T)[0]

x={} 
y={}
z={}
m={}
n={}
l={}


book1 = xlrd.open_workbook(os.path.join('分阶段_5.xlsx'))
sh1=book1.sheet_by_name('x_volume')
i = 1
for g in hospitals:
    j = 1
    for r in Recyle:
        x[g, r] = sh1.cell_value(i, j)
        j = j+1
    i += 1

sh2=book1.sheet_by_name('y_volume')
i = 1
for g in hospitals:
    j = 1
    for r in Disposal:
        y[g, r] = sh2.cell_value(i, j)
        j = j+1
    i += 1
    
sh3=book1.sheet_by_name('z_volume')
i = 1
for g in hospitals:
    j = 1
    for r in Transfer:
        z[g, r] = sh3.cell_value(i, j)
        j = j+1
    i += 1

sh4=book1.sheet_by_name('m_volume')
i = 1
for g in Transfer:
    j = 1
    for r in Disposal:
        m[g, r] = sh4.cell_value(i, j)
        j = j+1
    i += 1
    
sh5=book1.sheet_by_name('n_volume')
i = 1
for g in Transfer:
    j = 1
    for r in Recyle:
        n[g, r] = sh5.cell_value(i, j)
        j = j+1
    i += 1

sh6=book1.sheet_by_name('l_volume_sum')
i = 1
for g in Recyle:
    j = 1
    for r in Disposal:
        l[g, r] = sh6.cell_value(i, j)
        j = j+1
    i += 1

qx_in={}
for i in hospitals:
    for j in Recyle:
        qx_in[i,j]=x[i,j]*GRQmatrix[i,j]

qx_out={}
for i in hospitals:
    for j in Recyle:
        qx_out[i,j]=x[i,j]*GRQ_outmatrix[i,j]

qy_in={}
for i in hospitals:
    for j in Disposal:
        qy_in[i,j]=y[i,j]*GDQmatrix[i,j]

qy_out={}
for i in hospitals:
    for j in Disposal:
        qy_out[i,j]=y[i,j]*GDQ_outmatrix[i,j]

qz_in={}
for i in hospitals:
    for j in Transfer:
        qz_in[i,j]=z[i,j]*GTQmatrix[i,j]

qz_out={}
for i in hospitals:
    for j in Transfer:
        qz_out[i,j]=z[i,j]*GTQ_outmatrix[i,j]

qn_in={}
for i in Transfer:
    for j in Recyle:
        qn_in[i,j]=n[i,j]*TRQmatrix[i,j]

qn_out={}
for i in Transfer:
    for j in Recyle:
        qn_out[i,j]=n[i,j]*TRQ_outmatrix[i,j]

qm_in={}
for i in Transfer:
    for j in Disposal:
        qm_in[i,j]=m[i,j]*TDQmatrix[i,j]

qm_out={}
for i in Transfer:
    for j in Disposal:
        qm_out[i,j]=m[i,j]*TDQ_outmatrix[i,j]

ql_in={}
for i in Recyle:
    for j in Disposal:
        ql_in[i,j]=l[i,j]*RDQmatrix[i,j]

ql_out={}
for i in Recyle:
    for j in Disposal:
        ql_out[i,j]=l[i,j]*RDQ_outmatrix[i,j]


r_list=[3.35E+00,8.86E+00,3.59E+00,5.51E+00,9.337750578,1.49E+01,8.19E+00]
qr={}
i=0
for r in Recyle:
    qr[r]=r_list[i]
    i+=1

t_list=[1.12E+01,8.94E+00,9.74E+00]
qt={}
i=0
for t in Transfer:
    qt[t]=t_list[i]
    i+=1
    
d_list=[4.68E+01,27.9334419,27.9334419,5.19E+00,3.06E+01]
qd={}
i=0
for d in Disposal:
    qd[d]=d_list[i]
    i+=1

H=(sum(qx_in[i,j]**2*GRmatrix[i,j]*GR_nv[i,j]*lamd/w_v for i in hospitals for j in Recyle)
+sum(qx_out[i,j]**2*eta*GRmatrix[i,j]*(2*mu_h*GRmatrix[i,j]/w_man-d_length) for i in hospitals for j in Recyle)
+sum(qy_in[i,j]**2*GDmatrix[i,j]*GD_nv[i,j]*lamd/w_v for i in hospitals for j in Disposal)
+sum(qy_out[i,j]**2*eta*GDmatrix[i,j]*(2*mu_h*GDmatrix[i,j]/w_man-d_length) for i in hospitals for j in Disposal)
+sum(qz_in[i,j]**2*GTmatrix[i,j]*GT_nv[i,j]*lamd/w_v for i in hospitals for j in Transfer)
+sum(qz_out[i,j]**2*eta*GTmatrix[i,j]*(2*mu_h*GTmatrix[i,j]/w_man-d_length) for i in hospitals for j in Transfer)
+sum(qn_in[i,j]**2*TRmatrix[i,j]*TR_nv[i,j]*lamd/w_v for i in Transfer for j in Recyle)
+sum(qn_out[i,j]**2*eta*TRmatrix[i,j]*(2*mu_h*TRmatrix[i,j]/w_man-d_length) for i in Transfer for j in Recyle)
+sum(qm_in[i,j]**2*TDmatrix[i,j]*TD_nv[i,j]*lamd/w_v for i in Transfer for j in Disposal)
+sum(qm_out[i,j]**2*eta*TDmatrix[i,j]*(2*mu_h*TDmatrix[i,j]/w_man-d_length) for i in Transfer for j in Disposal)
+sum(ql_in[i,j]**2*RDmatrix[i,j]*RD_nv[i,j]*lamd/w_v for i in Recyle for j in Disposal)
+sum(ql_out[i,j]**2*eta*RDmatrix[i,j]*(2*mu_h*RDmatrix[i,j]/w_man-d_length) for i in Recyle for j in Disposal)
+sum(qr[i]**2*nodeQ*math.pi*eta_node[i]*(r0+mu_h*T)**2 for i in Recyle)
+sum(qt[i]**2*nodeQ*math.pi*eta_node[i]*(r0+mu_h*T)**2 for i in Transfer)
+sum(qd[i]**2*nodeQ*math.pi*eta_node[i]*(r0+mu_h*T)**2 for i in Disposal))


